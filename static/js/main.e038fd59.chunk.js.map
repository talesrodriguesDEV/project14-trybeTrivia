{"version":3,"sources":["services/tokenAPI.js","redux/actions/index.js","pages/Login.js","components/Header.js","components/Question.js","pages/Game.js","pages/Feedback.js","pages/Ranking.js","App.js","redux/reducers/player.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["fetchTokenAPI","a","fetch","response","json","data","localStorage","setItem","token","console","log","fetchQuestions","results","Login","state","name","email","handleChange","target","value","setState","isButtonDisabled","test","length","handleSubmit","event","preventDefault","props","history","login","push","onSubmit","this","className","htmlFor","type","data-testid","id","onChange","placeholder","disabled","React","Component","connect","dispatch","payload","loginAction","Header","gravatarEmail","score","playerName","getItem","src","md5","toString","alt","player","Question","timer","interval","nextButtonEnabled","secInterval","decreaseTime","previous","sumScore","difficulty","difficultyModifier","setNewQuestionTimer","changeQuestion","clearInterval","newInterval","setInterval","handleClick","rightOrNot","addScore","handleNext","nextQuestion","currentQuestionIndex","question","allAnswers","index","category","replace","map","answer","correct_answer","key","onClick","addScoreAction","Game","questions","setAnswersColors","Array","from","document","querySelectorAll","filter","button","innerText","forEach","includes","style","border","parentElement","children","find","incorrect_answers","sort","Math","random","Feedback","salvaNoStore","bind","rank","picture","preRank","JSON","parse","stringify","assertions","restart","Ranking","carregaDoLocalStore","b","r","i","App","path","exact","component","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e038fd59.chunk.js","sourcesContent":["export async function fetchTokenAPI() {\n  try {\n    const response = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchQuestions(token) {\n  try {\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    if (token === 'INVALID_TOKEN') return 'invalid';\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","export const LOGIN = 'LOGIN';\nexport const ADD_SCORE = 'ADD_SCORE';\nexport const RESTART_GAME = 'RESTART_GAME';\n\nexport const loginAction = (payload) => ({ type: LOGIN, payload });\n\nexport const addScoreAction = (payload) => ({ type: ADD_SCORE, payload });\n\nexport const restartGame = () => ({ type: RESTART_GAME });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchTokenAPI } from '../services/tokenAPI';\nimport { loginAction } from '../redux/actions';\n\nclass Login extends React.Component {\n  state = {\n    name: '',\n    email: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  isButtonDisabled = () => {\n    const { name, email } = this.state;\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return !(emailRegex.test(email) && name.length > 0);\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    await fetchTokenAPI();\n    const { history, login } = this.props;\n    const { name } = this.state;\n    login(this.state);\n    localStorage.setItem('playerName', name);\n    history.push('/game');\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this.handleSubmit } className=\"login-container\">\n        <h1>Let&#039;s play Trivia!</h1>\n        <label htmlFor=\"input-player-name\">\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            id=\"input-player-name\"\n            onChange={ this.handleChange }\n            name=\"name\"\n            placeholder=\"Name\"\n            className=\"form-control\"\n          />\n        </label>\n        <label htmlFor=\"input-player-email\">\n          <input\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            id=\"input-player-email\"\n            onChange={ this.handleChange }\n            name=\"email\"\n            placeholder=\"Email\"\n            className=\"form-control\"\n          />\n        </label>\n        <button\n          type=\"submit\"\n          data-testid=\"btn-play\"\n          disabled={ this.isButtonDisabled() }\n          className=\"btn btn-primary\"\n        >\n          Play\n        </button>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    action: PropTypes.string,\n    block: PropTypes.func,\n    createHref: PropTypes.func,\n    go: PropTypes.func,\n    goBack: PropTypes.func,\n    goForward: PropTypes.func,\n    length: PropTypes.number,\n    listen: PropTypes.func,\n    location: PropTypes.objectOf(PropTypes.string),\n    push: PropTypes.func,\n    replace: PropTypes.func,\n  }).isRequired,\n  login: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(loginAction(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\n\nclass Header extends React.Component {\n  render() {\n    const { gravatarEmail, name, score } = this.props;\n    const playerName = localStorage.getItem('playerName');\n    return (\n      <div className=\"header\">\n        <img\n          src={ `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}` }\n          alt=\"gravatar\"\n          data-testid=\"header-profile-picture\"\n        />\n        <p\n          data-testid=\"header-player-name\"\n          id=\"header-player-name\"\n        >\n          { name || playerName }\n        </p>\n        <p data-testid=\"header-score\">\n          You&#039;ve got\n          {' '}\n          <span>{ score }</span>\n          {' '}\n          points so far!\n        </p>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  gravatarEmail: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  gravatarEmail: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addScoreAction } from '../redux/actions';\n\nconst thirtySec = 30000;\n\nclass Question extends Component {\n  state = {\n    timer: 30,\n    interval: 0,\n    nextButtonEnabled: false,\n    secInterval: 0,\n  };\n\n  componentDidMount() {\n    const { changeQuestion } = this.props;\n    const oneSec = 1000;\n    const interval = setInterval(changeQuestion, thirtySec);\n    const secInterval = setInterval(this.decreaseTime, oneSec);\n    this.setState({ interval, secInterval });\n  }\n\n  componentWillUnmount() {\n    const { interval, secInterval } = this.state;\n    clearInterval(interval);\n    clearInterval(secInterval);\n  }\n\n  decreaseTime = () => {\n    const { timer } = this.state;\n    if (timer > 0) this.setState((previous) => ({ timer: previous.timer - 1 }));\n    else this.setState({ nextButtonEnabled: true });\n  }\n\n  sumScore = (difficulty) => {\n    const { timer } = this.state;\n    const base = 10;\n    const hard = 3;\n    let difficultyModifier;\n    if (difficulty === 'hard') difficultyModifier = hard;\n    else if (difficulty === 'medium') difficultyModifier = 2;\n    else if (difficulty === 'easy') difficultyModifier = 1;\n\n    return base + (timer * difficultyModifier);\n  }\n\n  setNewQuestionTimer = () => {\n    const { changeQuestion } = this.props;\n    const { interval } = this.state;\n    clearInterval(interval);\n    const newInterval = setInterval(changeQuestion, thirtySec);\n    this.setState({ timer: 30, interval: newInterval });\n  }\n\n  handleClick = (event, rightOrNot, difficulty) => {\n    const { changeQuestion, addScore } = this.props;\n    if (rightOrNot === 'correct-answer') addScore(this.sumScore(difficulty));\n    changeQuestion(event);\n    this.setState({ nextButtonEnabled: true });\n  }\n\n  handleNext = () => {\n    const { nextQuestion, currentQuestionIndex, history } = this.props;\n    this.setNewQuestionTimer();\n    nextQuestion();\n    this.setState({ nextButtonEnabled: false });\n    const LAST_QUESTION = 4;\n    if (currentQuestionIndex === LAST_QUESTION) history.push('/feedback');\n  }\n\n  render() {\n    const { question, allAnswers } = this.props;\n    const { timer, nextButtonEnabled } = this.state;\n    let index = 0;\n    return (\n      <div className=\"question-container\">\n        <p data-testid=\"timer\">\n          You&#039;ve got\n          {' '}\n          <span className=\"timer\">{timer}</span>\n          {' '}\n          seconds left!\n        </p>\n        <p data-testid=\"question-category\">\n          Question Theme:\n          {' '}\n          <span className=\"theme\">{question.category}</span>\n        </p>\n        <p data-testid=\"question-text\">\n          {question.question\n            .replace(/&quot;/g, '\\'')\n            .replace(/&#039;/g, '\\'')}\n        </p>\n        <div data-testid=\"answer-options\" className=\"answers\">\n          {allAnswers.map((answer) => {\n            let rightOrNot = '';\n            if (answer === question.correct_answer) rightOrNot = 'correct-answer';\n            else {\n              rightOrNot = `wrong-answer-${index}`;\n              index += 1;\n            }\n            return (\n              <button\n                key={ answer }\n                type=\"button\"\n                data-testid={ rightOrNot }\n                onClick={ (event) => {\n                  this.handleClick(event, rightOrNot, question.difficulty);\n                } }\n                className={ `${rightOrNot} btn btn-warning` }\n              >\n                {answer}\n              </button>\n            );\n          })}\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={ this.handleNext }\n          className=\"btn btn-primary\"\n          disabled={ !nextButtonEnabled }\n        >\n          Next\n        </button>\n      </div>);\n  }\n}\n\nQuestion.propTypes = {\n  question: PropTypes.shape({\n    category: PropTypes.string,\n    type: PropTypes.string,\n    difficulty: PropTypes.string,\n    question: PropTypes.string,\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  changeQuestion: PropTypes.func.isRequired,\n  allAnswers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addScore: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  currentQuestionIndex: PropTypes.number.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addScore: (payload) => dispatch(addScoreAction(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Question from '../components/Question';\nimport { fetchQuestions } from '../services/tokenAPI';\n\nclass Game extends Component {\n  state = {\n    questions: [],\n    currentQuestionIndex: 0,\n  }\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const questions = await fetchQuestions(token);\n    if (questions === 'invalid') history.push('/');\n    else this.setState({ questions });\n  }\n\n  changeQuestion = ({ target } = {}) => {\n    if (target) this.setAnswersColors(target);\n    Array.from(document.querySelectorAll('button'))\n      .filter((button) => button.innerText !== 'Next'\n      && button.innerText !== 'Play Again'\n      && button.innerText !== 'Ranking'\n      && button.innerText !== 'Play')\n      .forEach((button) => { button.disabled = true; });\n  }\n\n  setAnswersColors = (target) => {\n    const correctAnswerString = 'correct-answer';\n    if (target.className.includes(correctAnswerString)) {\n      target.style.border = '3px solid rgb(6, 240, 15)';\n    } else if (target.className.includes('wrong-answer')) {\n      Array.from(target.parentElement.children)\n        .find((answer) => answer.className.includes(correctAnswerString))\n        .style.border = '3px solid rgb(6, 240, 15)';\n    }\n    Array.from(target.parentElement.children)\n      .filter((answer) => !answer.className.includes(correctAnswerString))\n      .forEach((answer) => { answer.style.border = '3px solid red'; });\n  }\n\n  nextQuestion = (currentQuestionIndex, questions) => {\n    if (currentQuestionIndex !== questions.length - 1) {\n      this.setState((previous) => ({\n        currentQuestionIndex: previous.currentQuestionIndex + 1 }));\n    }\n  }\n\n  render() {\n    const { questions, currentQuestionIndex } = this.state;\n    const { history } = this.props;\n    const half = 0.5;\n    return (\n      <div className=\"bigger-container\">\n        <Header />\n        {questions.length !== 0 && <Question\n          question={ questions[currentQuestionIndex] }\n          changeQuestion={ this.changeQuestion }\n          allAnswers={ [...questions[currentQuestionIndex].incorrect_answers,\n            questions[currentQuestionIndex].correct_answer]\n            .sort(() => Math.random() - half) }\n          nextQuestion={ () => this.nextQuestion(currentQuestionIndex, questions) }\n          currentQuestionIndex={ currentQuestionIndex }\n          history={ history }\n        />}\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    action: PropTypes.string,\n    block: PropTypes.func,\n    createHref: PropTypes.func,\n    go: PropTypes.func,\n    goBack: PropTypes.func,\n    goForward: PropTypes.func,\n    length: PropTypes.number,\n    listen: PropTypes.func,\n    location: PropTypes.objectOf(PropTypes.string),\n    push: PropTypes.func,\n    replace: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Game;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { restartGame } from '../redux/actions';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super();\n    this.salvaNoStore = this.salvaNoStore.bind(this);\n  }\n\n  salvaNoStore() {\n    const { score, gravatarEmail, name } = this.props;\n    const rank = {\n      name,\n      score,\n      picture: gravatarEmail,\n    };\n    const preRank = JSON.parse(localStorage.getItem('ranking'));\n    if (preRank === null && name !== '') {\n      localStorage.setItem('ranking', JSON.stringify([rank]));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([...preRank, rank]));\n    }\n  }\n\n  render() {\n    const { assertions, score, history, restart } = this.props;\n    const minAssertions = 3;\n    return (\n      <div className=\"bigger-container\">\n        <Header />\n        <div className=\"feedback\">\n          <p\n            data-testid=\"feedback-text\"\n          >\n            {this.salvaNoStore()}\n            {assertions < minAssertions ? 'Could be better...' : 'Well Done!'}\n          </p>\n          <p data-testid=\"feedback-total-score\">\n            You made\n            {' '}\n            <span>{score}</span>\n            {' '}\n            points!\n          </p>\n          <p data-testid=\"feedback-total-question\">\n            And got\n            {' '}\n            <span>{assertions}</span>\n            {' '}\n            right!\n          </p>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => {\n              restart();\n              history.push('/');\n            } }\n          >\n            Play Again\n          </button>\n          <button\n            className=\"btn btn-warning\"\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ () => history.push('/ranking') }\n          >\n            Ranking\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  gravatarEmail: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n  restart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  gravatarEmail: state.player.gravatarEmail,\n  name: state.player.name,\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  restart: () => dispatch(restartGame()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { restartGame } from '../redux/actions';\nimport Header from '../components/Header';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super();\n    this.carregaDoLocalStore = this.carregaDoLocalStore.bind(this);\n  }\n\n  carregaDoLocalStore() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    const ordenadoRank = ranking.sort((a, b) => b.score - a.score);\n    return ordenadoRank;\n  }\n\n  render() {\n    const { history, restart } = this.props;\n    const rank = this.carregaDoLocalStore();\n    return (\n      <div className=\"bigger-container\">\n        <Header />\n        <div className=\"ranking\">\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n          <table className=\"table table-dark table-striped table-bordered border-light\">\n            <thead className=\"table-light\">\n              <tr>\n                <th>Rank</th>\n                <th>Player</th>\n                <th>Score</th>\n              </tr>\n            </thead>\n            <tbody className=\"table-group-divider\">\n              {rank.map((r, i) => (\n                <tr key={ i } className=\"rank-card\">\n                  <td>{i + 1}</td>\n                  <td data-testid={ `tdlayer-name-${i}` }>\n                    {r.name || 'Anonymous Player'}\n                  </td>\n                  <td data-testid={ `player-score-${i}` }>\n                    {r.score}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n            onClick={ () => {\n              restart();\n              history.push('/');\n            } }\n          >\n            Play Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n  restart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  restart: () => dispatch(restartGame()),\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={ Login } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </div>\n  );\n}\n","import { ADD_SCORE, LOGIN, RESTART_GAME } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    };\n  case ADD_SCORE:\n    return {\n      ...state,\n      score: state.score + action.payload,\n      assertions: state.assertions + 1,\n    };\n  case RESTART_GAME:\n    return {\n      ...state,\n      name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '',\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { combineReducers } from 'redux';\nimport player from './player';\n\nconst rootReducer = combineReducers({ player });\n\nexport default rootReducer;\n","import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}